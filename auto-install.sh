#!/bin/bash

# ShamsCloud - –ü–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
# –í–µ—Ä—Å–∏—è: 2.0
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑–≤–µ—Ä–Ω–µ—Ç ShamsCloud –Ω–∞ –≤–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOG_FILE="/tmp/shamscloud-install.log"
exec 1> >(tee -a "$LOG_FILE")
exec 2> >(tee -a "$LOG_FILE" >&2)

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date '+%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

info() {
    echo -e "${BLUE}[INFO] $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
INSTALL_STATE_FILE="$HOME/.shamscloud-install-state"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ —à–∞–≥–∞
mark_step_completed() {
    echo "$1=completed" >> "$INSTALL_STATE_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —à–∞–≥–∞
is_step_completed() {
    if [ -f "$INSTALL_STATE_FILE" ]; then
        grep -q "$1=completed" "$INSTALL_STATE_FILE" 2>/dev/null
    else
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω –ø–æ–ª–Ω—ã–π –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞)
reset_install_state() {
    if [ "$1" == "--force" ]; then
        log "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
        rm -f "$INSTALL_STATE_FILE"
    fi
}

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è (–∏–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞)
AUTO_DB_PASSWORD="ShamsCloud_Secure_2024_$(date +%s)"
AUTO_ADMIN_EMAIL="admin@shamscloud.local"
AUTO_ADMIN_PASSWORD="ShamsAdmin2024!"
AUTO_DEMO_EMAIL="demo@shamscloud.local"
AUTO_DEMO_PASSWORD="ShamsDemo2024!"
AUTO_DOMAIN="shamscloud.uz"
AUTO_PROJECT_DIR="$HOME/shamscloud"

log "üåü –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É ShamsCloud"
log "üìç –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤: $LOG_FILE"
log "üíæ –°–æ—Å—Ç–æ—è–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: $INSTALL_STATE_FILE"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
reset_install_state "$1"

# ==================== –®–ê–ì 1: –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´ ====================
if ! is_step_completed "system_check"; then
    log "üîç –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –û–°
    if [[ "$OSTYPE" != "linux-gnu"* ]]; then
        error "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ Linux. –í–∞—à–∞ –û–°: $OSTYPE"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ sudo
    if ! sudo -n true 2>/dev/null; then
        error "–¢—Ä–µ–±—É—é—Ç—Å—è sudo –ø—Ä–∞–≤–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo -v"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ (–º–∏–Ω–∏–º—É–º 5GB)
    AVAILABLE_SPACE=$(df / | awk 'NR==2 {print $4}')
    REQUIRED_SPACE=5242880  # 5GB –≤ KB
    if [ "$AVAILABLE_SPACE" -lt "$REQUIRED_SPACE" ]; then
        error "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ. –¢—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 5GB"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ RAM (–º–∏–Ω–∏–º—É–º 2GB)
    TOTAL_RAM=$(free -m | awk 'NR==2{print $2}')
    if [ "$TOTAL_RAM" -lt 2000 ]; then
        warn "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –º–µ–Ω—å—à–µ 2GB RAM. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 2GB"
    fi
    
    log "‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
    mark_step_completed "system_check"
fi

# ==================== –®–ê–ì 2: –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´ ====================
if ! is_step_completed "system_update"; then
    log "üîÑ –®–∞–≥ 2: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"
    
    export DEBIAN_FRONTEND=noninteractive
    sudo apt-get update -qq
    sudo apt-get upgrade -y -qq
    sudo apt-get install -y -qq curl wget git build-essential software-properties-common apt-transport-https ca-certificates gnupg lsb-release unzip
    
    log "‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
    mark_step_completed "system_update"
fi

# ==================== –®–ê–ì 3: –£–°–¢–ê–ù–û–í–ö–ê NODE.JS ====================
if ! is_step_completed "nodejs_install"; then
    log "üì¶ –®–∞–≥ 3: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js 20"
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ Node.js
    sudo apt-get remove -y nodejs npm 2>/dev/null || true
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js 20 —á–µ—Ä–µ–∑ NodeSource
    curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
    sudo apt-get install -y nodejs
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
    NODE_VERSION=$(node --version)
    NPM_VERSION=$(npm --version)
    log "‚úÖ Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $NODE_VERSION"
    log "‚úÖ npm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $NPM_VERSION"
    
    mark_step_completed "nodejs_install"
fi

# ==================== –®–ê–ì 4: –£–°–¢–ê–ù–û–í–ö–ê POSTGRESQL ====================
if ! is_step_completed "postgresql_install"; then
    log "üêò –®–∞–≥ 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL 16"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π PostgreSQL
    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
    echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
    
    sudo apt-get update -qq
    sudo apt-get install -y postgresql-16 postgresql-contrib-16 postgresql-client-16
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º PostgreSQL
    sudo systemctl start postgresql
    sudo systemctl enable postgresql
    
    log "‚úÖ PostgreSQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω"
    mark_step_completed "postgresql_install"
fi

# ==================== –®–ê–ì 5: –ù–ê–°–¢–†–û–ô–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• ====================
if ! is_step_completed "database_setup"; then
    log "üóÑÔ∏è –®–∞–≥ 5: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    sudo -u postgres psql << EOF
-- –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
DROP USER IF EXISTS shamscloud;
CREATE USER shamscloud WITH PASSWORD '$AUTO_DB_PASSWORD';

-- –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
DROP DATABASE IF EXISTS shamscloud;
CREATE DATABASE shamscloud OWNER shamscloud;

-- –î–∞–µ–º –ø—Ä–∞–≤–∞
GRANT ALL PRIVILEGES ON DATABASE shamscloud TO shamscloud;
ALTER USER shamscloud CREATEDB;
EOF
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    PGPASSWORD="$AUTO_DB_PASSWORD" psql -h localhost -U shamscloud -d shamscloud -c "SELECT version();" > /dev/null
    
    log "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
    log "üìã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ë–î: shamscloud"
    log "üîë –ü–∞—Ä–æ–ª—å –ë–î: $AUTO_DB_PASSWORD"
    
    mark_step_completed "database_setup"
fi

# ==================== –®–ê–ì 6: –£–°–¢–ê–ù–û–í–ö–ê NGINX ====================
if ! is_step_completed "nginx_install"; then
    log "üåê –®–∞–≥ 6: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nginx"
    
    sudo apt-get install -y nginx
    sudo systemctl start nginx
    sudo systemctl enable nginx
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall –¥–ª—è –¥–æ–º–µ–Ω–∞
    sudo ufw allow 'Nginx Full' 2>/dev/null || true
    sudo ufw allow ssh 2>/dev/null || true
    sudo ufw allow 80/tcp 2>/dev/null || true
    sudo ufw allow 443/tcp 2>/dev/null || true
    
    log "‚úÖ Nginx —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω"
    mark_step_completed "nginx_install"
fi

# ==================== –®–ê–ì 7: –°–ö–ê–ß–ò–í–ê–ù–ò–ï –ö–û–î–ê ====================
if ! is_step_completed "code_download"; then
    log "üì• –®–∞–≥ 7: –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞ ShamsCloud"
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –µ—Å—Ç—å
    if [ -d "$AUTO_PROJECT_DIR" ]; then
        warn "–£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é $AUTO_PROJECT_DIR"
        rm -rf "$AUTO_PROJECT_DIR"
    fi
    
    # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ (–∫–æ–ø–∏—Ä—É–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã)
    mkdir -p "$AUTO_PROJECT_DIR"
    
    # –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ (–∏–º–∏—Ç–∏—Ä—É–µ–º git clone)
    cp -r . "$AUTO_PROJECT_DIR/" 2>/dev/null || true
    
    # –ò–ª–∏ —Å–∫–∞—á–∏–≤–∞–µ–º —Å GitHub (–µ—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç —Ç–∞–º —Ä–∞–∑–º–µ—â–µ–Ω)
    # git clone https://github.com/abdulazizsalimov/shamscloud.git "$AUTO_PROJECT_DIR"
    
    cd "$AUTO_PROJECT_DIR"
    
    log "‚úÖ –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ $AUTO_PROJECT_DIR"
    mark_step_completed "code_download"
fi

# ==================== –®–ê–ì 8: –ù–ê–°–¢–†–û–ô–ö–ê –û–ö–†–£–ñ–ï–ù–ò–Ø ====================
if ! is_step_completed "env_setup"; then
    log "‚öôÔ∏è –®–∞–≥ 8: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    
    cd "$AUTO_PROJECT_DIR"
    
    # –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    cat > .env << EOF
# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL=postgresql://shamscloud:$AUTO_DB_PASSWORD@localhost:5432/shamscloud
PGHOST=localhost
PGPORT=5432
PGUSER=shamscloud
PGPASSWORD=$AUTO_DB_PASSWORD
PGDATABASE=shamscloud

# –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
NODE_ENV=production

# Firebase (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∂–µ)
# VITE_FIREBASE_API_KEY=
# VITE_FIREBASE_PROJECT_ID=
# VITE_FIREBASE_APP_ID=

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
SESSION_SECRET=ShamsCloud_Session_Secret_$(openssl rand -hex 32)

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
AUTO_INSTALL=true
INSTALL_DATE=$(date)
EOF
    
    log "‚úÖ –§–∞–π–ª –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω"
    mark_step_completed "env_setup"
fi

# ==================== –®–ê–ì 9: –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô ====================
if ! is_step_completed "dependencies_install"; then
    log "üì¶ –®–∞–≥ 9: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞"
    
    cd "$AUTO_PROJECT_DIR"
    
    # –û—á–∏—â–∞–µ–º –∫–µ—à npm
    npm cache clean --force
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    npm install
    
    log "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    mark_step_completed "dependencies_install"
fi

# ==================== –®–ê–ì 10: –°–ë–û–†–ö–ê –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ====================
if ! is_step_completed "app_build"; then
    log "üèóÔ∏è –®–∞–≥ 10: –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    
    cd "$AUTO_PROJECT_DIR"
    
    # –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    npm run build
    
    log "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ"
    mark_step_completed "app_build"
fi

# ==================== –®–ê–ì 11: –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–î ====================
if ! is_step_completed "db_init"; then
    log "üóÇÔ∏è –®–∞–≥ 11: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    
    cd "$AUTO_PROJECT_DIR"
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ö–µ–º—É
    npm run db:push
    
    log "‚úÖ –°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞"
    mark_step_completed "db_init"
fi

# ==================== –®–ê–ì 12: –°–û–ó–î–ê–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô ====================
if ! is_step_completed "users_create"; then
    log "üë• –®–∞–≥ 12: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    
    # –°–æ–∑–¥–∞–µ–º SQL —Ñ–∞–π–ª —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    cat > /tmp/create_users.sql << EOF
-- –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
INSERT INTO users (email, name, password, role, quota, used_space, is_blocked, is_email_verified, created_at)
VALUES (
    '$AUTO_ADMIN_EMAIL',
    '–°–∏—Å—Ç–µ–º–Ω—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
    '\$2b\$10\$HwzHHQlNXQNOjQNKj3s9wOLXz8qNvxjKwq1p/JvYAh.Q5s6DPOG8e',
    'admin',
    '107374182400',
    '0',
    false,
    true,
    NOW()
) ON CONFLICT (email) DO NOTHING;

-- –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
INSERT INTO users (email, name, password, role, quota, used_space, is_blocked, is_email_verified, created_at)
VALUES (
    '$AUTO_DEMO_EMAIL',
    '–î–µ–º–æ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    '\$2b\$10\$HwzHHQlNXQNOjQNKj3s9wOLXz8qNvxjKwq1p/JvYAh.Q5s6DPOG8e',
    'user',
    '5368709120',
    '0',
    false,
    true,
    NOW()
) ON CONFLICT (email) DO NOTHING;
EOF
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º SQL
    PGPASSWORD="$AUTO_DB_PASSWORD" psql -h localhost -U shamscloud -d shamscloud -f /tmp/create_users.sql
    
    log "‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã"
    log "üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: $AUTO_ADMIN_EMAIL / ShamsAdmin2024!"
    log "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $AUTO_DEMO_EMAIL / ShamsDemo2024!"
    
    rm -f /tmp/create_users.sql
    mark_step_completed "users_create"
fi

# ==================== –®–ê–ì 13: –°–û–ó–î–ê–ù–ò–ï SYSTEMD –°–ï–†–í–ò–°–ê ====================
if ! is_step_completed "systemd_service"; then
    log "‚öôÔ∏è –®–∞–≥ 13: –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞"
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å —Ñ–∞–π–ª
    sudo tee /etc/systemd/system/shamscloud.service > /dev/null << EOF
[Unit]
Description=ShamsCloud File Storage Application
After=network.target postgresql.service
Requires=postgresql.service

[Service]
Type=simple
User=$USER
WorkingDirectory=$AUTO_PROJECT_DIR
ExecStart=/usr/bin/npm start
Restart=always
RestartSec=10
Environment=NODE_ENV=production
EnvironmentFile=$AUTO_PROJECT_DIR/.env

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
NoNewPrivileges=yes
PrivateTmp=yes
ProtectSystem=strict
ReadWritePaths=$AUTO_PROJECT_DIR

[Install]
WantedBy=multi-user.target
EOF
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º systemd –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
    sudo systemctl daemon-reload
    sudo systemctl enable shamscloud
    sudo systemctl start shamscloud
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    sleep 10
    
    log "‚úÖ Systemd —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω"
    mark_step_completed "systemd_service"
fi

# ==================== –®–ê–ì 14: –ù–ê–°–¢–†–û–ô–ö–ê NGINX ====================
if ! is_step_completed "nginx_config"; then
    log "üåê –®–∞–≥ 14: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx –¥–ª—è –¥–æ–º–µ–Ω–∞ $AUTO_DOMAIN"
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–∞–π—Ç–∞
    sudo tee /etc/nginx/sites-available/shamscloud > /dev/null << EOF
server {
    listen 80;
    server_name $AUTO_DOMAIN www.$AUTO_DOMAIN;
    
    # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ HTTPS (–ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ SSL)
    return 301 https://\$server_name\$request_uri;
}

server {
    listen 443 ssl http2;
    server_name $AUTO_DOMAIN www.$AUTO_DOMAIN;
    
    # SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–±—É–¥—É—Ç –æ–±–Ω–æ–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Certbot)
    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # –õ–∏–º–∏—Ç —Ä–∞–∑–º–µ—Ä–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    client_max_body_size 100M;
    
    # –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    location / {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
        proxy_read_timeout 86400;
    }
    
    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://localhost:5000;
        proxy_set_header Host \$host;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}
EOF
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    sudo mkdir -p /etc/ssl/private
    sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
        -keyout /etc/ssl/private/nginx-selfsigned.key \
        -out /etc/ssl/certs/nginx-selfsigned.crt \
        -subj "/C=UZ/ST=Tashkent/L=Tashkent/O=ShamsCloud/CN=$AUTO_DOMAIN"
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–∞–π—Ç
    sudo ln -sf /etc/nginx/sites-available/shamscloud /etc/nginx/sites-enabled/
    sudo rm -f /etc/nginx/sites-enabled/default
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º
    sudo nginx -t
    sudo systemctl restart nginx
    
    log "‚úÖ Nginx –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –¥–æ–º–µ–Ω–∞ $AUTO_DOMAIN"
    mark_step_completed "nginx_config"
fi

# ==================== –®–ê–ì 15: –£–°–¢–ê–ù–û–í–ö–ê SSL –°–ï–†–¢–ò–§–ò–ö–ê–¢–ê ====================
if ! is_step_completed "ssl_setup"; then
    log "üîí –®–∞–≥ 15: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è $AUTO_DOMAIN"
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Certbot
    sudo apt-get install -y certbot python3-certbot-nginx
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–æ–º–µ–Ω —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä
    log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º DNS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è $AUTO_DOMAIN..."
    
    # –í—Ä–µ–º–µ–Ω–Ω–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º HTTP –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    sudo tee /etc/nginx/sites-available/shamscloud-temp > /dev/null << EOF
server {
    listen 80;
    server_name $AUTO_DOMAIN www.$AUTO_DOMAIN;
    
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
    
    location / {
        proxy_pass http://localhost:5000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF
    
    sudo ln -sf /etc/nginx/sites-available/shamscloud-temp /etc/nginx/sites-enabled/shamscloud
    sudo nginx -t && sudo systemctl reload nginx
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è ACME challenge
    sudo mkdir -p /var/www/html/.well-known/acme-challenge
    
    # –ü–æ–ª—É—á–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    log "üìú –ü–æ–ª—É—á–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –æ—Ç Let's Encrypt..."
    if sudo certbot --nginx -d $AUTO_DOMAIN -d www.$AUTO_DOMAIN --non-interactive --agree-tos --email admin@$AUTO_DOMAIN --redirect; then
        log "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
        echo "0 12 * * * /usr/bin/certbot renew --quiet" | sudo crontab -
        
    else
        warn "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –æ—Ç Let's Encrypt"
        warn "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:"
        warn "- –î–æ–º–µ–Ω $AUTO_DOMAIN –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä"
        warn "- –ü–æ—Ä—Ç—ã 80 –∏ 443 –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã firewall"
        warn "- –ü—Ä–æ–±–ª–µ–º—ã —Å DNS"
        
        log "üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º"
        sudo ln -sf /etc/nginx/sites-available/shamscloud /etc/nginx/sites-enabled/shamscloud
        sudo nginx -t && sudo systemctl reload nginx
    fi
    
    mark_step_completed "ssl_setup"
fi

# ==================== –®–ê–ì 16: –ü–†–û–í–ï–†–ö–ê –†–ê–ë–û–¢–´ ====================
if ! is_step_completed "final_check"; then
    log "üîç –®–∞–≥ 15: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
    if systemctl is-active --quiet postgresql; then
        log "‚úÖ PostgreSQL —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        error "‚ùå PostgreSQL –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    if systemctl is-active --quiet nginx; then
        log "‚úÖ Nginx —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        error "‚ùå Nginx –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    if systemctl is-active --quiet shamscloud; then
        log "‚úÖ ShamsCloud —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        error "‚ùå ShamsCloud –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    sleep 5
    for i in {1..10}; do
        if curl -s http://localhost:5000/ > /dev/null; then
            log "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ http://localhost:5000"
            break
        fi
        warn "–ü–æ–ø—ã—Ç–∫–∞ $i/10: –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
        sleep 10
    done
    
    if curl -s -k https://$AUTO_DOMAIN/ > /dev/null; then
        log "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ —á–µ—Ä–µ–∑ Nginx –Ω–∞ https://$AUTO_DOMAIN"
    elif curl -s http://$AUTO_DOMAIN/ > /dev/null; then
        log "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ —á–µ—Ä–µ–∑ Nginx –Ω–∞ http://$AUTO_DOMAIN"
    else
        warn "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–æ–º —á–µ—Ä–µ–∑ Nginx –Ω–∞ –¥–æ–º–µ–Ω–µ $AUTO_DOMAIN"
    fi
    
    mark_step_completed "final_check"
fi

# ==================== –ó–ê–í–ï–†–®–ï–ù–ò–ï ====================
log ""
log "üéâüéâüéâ ShamsCloud —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! üéâüéâüéâ"
log ""
log "üìç –ê–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç—É–ø–∞:"
log "   https://$AUTO_DOMAIN      (–æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω —Å SSL)"
log "   http://$AUTO_DOMAIN       (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π HTTP)"
log "   http://localhost:5000     (–ø—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ)"
log ""
log "üë§ –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:"
log "   –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: $AUTO_ADMIN_EMAIL / ShamsAdmin2024!"
log "   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:  $AUTO_DEMO_EMAIL / ShamsDemo2024!"
log ""
log "üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:"
log "   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: shamscloud"
log "   –ü–∞—Ä–æ–ª—å: $AUTO_DB_PASSWORD"
log "   –ë–∞–∑–∞: shamscloud"
log ""
log "üìÇ –£—Å—Ç–∞–Ω–æ–≤–æ—á–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $AUTO_PROJECT_DIR"
log "üìã –õ–æ–≥–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: $LOG_FILE"
log "üíæ –°–æ—Å—Ç–æ—è–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: $INSTALL_STATE_FILE"
log ""
log "üõ†Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–º:"
log "   sudo systemctl status shamscloud    # –°—Ç–∞—Ç—É—Å"
log "   sudo systemctl restart shamscloud   # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫"
log "   sudo systemctl stop shamscloud      # –û—Å—Ç–∞–Ω–æ–≤–∫–∞"
log "   sudo journalctl -u shamscloud -f    # –õ–æ–≥–∏"
log ""
log "üîÑ –î–ª—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
log "   $0 --force"
log ""

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
cat > "$HOME/shamscloud-credentials.txt" << EOF
ShamsCloud - –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞
=============================

üåê –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç: https://shamscloud.uz/
üîó –†–µ–∑–µ—Ä–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø: http://shamscloud.uz/
üõ†Ô∏è –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: http://localhost:5000/

üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: $AUTO_ADMIN_EMAIL / ShamsAdmin2024!
üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $AUTO_DEMO_EMAIL / ShamsDemo2024!

üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: shamscloud / $AUTO_DB_PASSWORD

üìÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: $(date)
üè† –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $AUTO_PROJECT_DIR

üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:
sudo systemctl status shamscloud    # –°—Ç–∞—Ç—É—Å
sudo systemctl restart shamscloud   # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫  
sudo journalctl -u shamscloud -f    # –õ–æ–≥–∏

üìú SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: Let's Encrypt (–∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)
üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: HTTPS –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–µ–Ω
EOF

log "üíæ –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ $HOME/shamscloud-credentials.txt"
log ""
log "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ú–æ–∂–µ—Ç–µ –Ω–∞—á–∏–Ω–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ShamsCloud!"