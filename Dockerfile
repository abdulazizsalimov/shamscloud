# Dockerfile –¥–ª—è ShamsCloud - –ø–æ–ª–Ω–∞—è –∫–æ–ø–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
FROM node:20-alpine AS base

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
RUN apk add --no-cache \
    libc6-compat \
    postgresql-client \
    curl \
    bash

WORKDIR /app

# –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
COPY package*.json ./
COPY tsconfig.json ./
COPY vite.config.ts ./
COPY tailwind.config.ts ./
COPY postcss.config.js ./
COPY components.json ./
COPY drizzle.config.ts ./

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
FROM base AS deps
RUN npm ci

# –≠—Ç–∞–ø —Å–±–æ—Ä–∫–∏
FROM deps AS builder

# –ö–æ–ø–∏—Ä—É–µ–º –≤–µ—Å—å –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ (—Ç–æ—á–Ω–æ –∫–∞–∫ –≤ —Ç–µ–∫—É—â–µ–º –ø—Ä–æ–µ–∫—Ç–µ)
COPY . .

# –°–æ–±–∏—Ä–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
RUN npm run build

# Production –æ–±—Ä–∞–∑
FROM node:20-alpine AS runner

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è production
RUN apk add --no-cache \
    postgresql-client \
    curl \
    bash

WORKDIR /app

# –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 shamscloud

# –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/server ./server
COPY --from=builder /app/shared ./shared
COPY --from=builder /app/drizzle.config.ts ./

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
RUN mkdir -p uploads data settings
RUN chown -R shamscloud:nodejs uploads data settings

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ —Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π –¥–∞–Ω–Ω—ã—Ö
COPY --chown=shamscloud:nodejs <<'EOF' /app/docker-start.sh
#!/bin/bash

echo "üöÄ –ó–∞–ø—É—Å–∫ ShamsCloud –≤ Docker..."

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL
echo "üìä –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
until pg_isready -h $PGHOST -p $PGPORT -U $PGUSER; do
  echo "‚è≥ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –≥–æ—Ç–æ–≤–∞, –∂–¥–µ–º..."
  sleep 2
done

echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞!"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ö–µ–º—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
npm run db:push

# –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç)
echo "üë• –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é..."

# –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª–∏
ADMIN_HASH=$(node -e "const bcrypt = require('bcryptjs'); console.log(bcrypt.hashSync('ShamsAdmin2024!', 10));")
DEMO_HASH=$(node -e "const bcrypt = require('bcryptjs'); console.log(bcrypt.hashSync('ShamsDemo2024!', 10));")

# –°–æ–∑–¥–∞–µ–º SQL –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
cat > /tmp/docker_users.sql << SQL_EOF
-- –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
INSERT INTO users (email, name, password, role, quota, used_space, is_blocked, is_email_verified, created_at)
VALUES (
    'admin@shamscloud.uz',
    '–°–∏—Å—Ç–µ–º–Ω—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
    '$ADMIN_HASH',
    'admin',
    '107374182400',
    '0',
    false,
    true,
    NOW()
) ON CONFLICT (email) DO NOTHING;

-- –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
INSERT INTO users (email, name, password, role, quota, used_space, is_blocked, is_email_verified, created_at)
VALUES (
    'demo@shamscloud.uz',
    '–î–µ–º–æ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    '$DEMO_HASH',
    'user',
    '5368709120',
    '0',
    false,
    true,
    NOW()
) ON CONFLICT (email) DO NOTHING;

-- –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ –ø–∞–ø–æ–∫
DO \$\$
DECLARE
    demo_user_id INTEGER;
BEGIN
    SELECT id INTO demo_user_id FROM users WHERE email = 'demo@shamscloud.uz';
    
    IF demo_user_id IS NOT NULL THEN
        INSERT INTO files (name, path, type, size, is_folder, parent_id, user_id, is_public, public_token, share_type, is_password_protected, share_password, created_at, updated_at)
        VALUES 
            ('Documents', '', 'folder', '0', true, NULL, demo_user_id, false, NULL, NULL, false, NULL, NOW(), NOW()),
            ('Photos', '', 'folder', '0', true, NULL, demo_user_id, false, NULL, NULL, false, NULL, NOW(), NOW())
        ON CONFLICT DO NOTHING;
    END IF;
END \$\$;
SQL_EOF

# –í—ã–ø–æ–ª–Ω—è–µ–º SQL
PGPASSWORD=$PGPASSWORD psql -h $PGHOST -p $PGPORT -U $PGUSER -d $PGDATABASE -f /tmp/docker_users.sql

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
ADMIN_ID=$(PGPASSWORD=$PGPASSWORD psql -h $PGHOST -p $PGPORT -U $PGUSER -d $PGDATABASE -t -c "SELECT id FROM users WHERE email = 'admin@shamscloud.uz';" | xargs)
DEMO_ID=$(PGPASSWORD=$PGPASSWORD psql -h $PGHOST -p $PGPORT -U $PGUSER -d $PGDATABASE -t -c "SELECT id FROM users WHERE email = 'demo@shamscloud.uz';" | xargs)

if [ ! -z "$ADMIN_ID" ]; then
    mkdir -p "uploads/$ADMIN_ID"
fi

if [ ! -z "$DEMO_ID" ]; then
    mkdir -p "uploads/$DEMO_ID"
fi

echo "‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin@shamscloud.uz / ShamsAdmin2024!"
echo "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: demo@shamscloud.uz / ShamsDemo2024!"

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
echo "üåü –ó–∞–ø—É—Å–∫ ShamsCloud –Ω–∞ –ø–æ—Ä—Ç—É $PORT..."
exec npm start
EOF

# –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
RUN chmod +x /app/docker-start.sh

# –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
USER shamscloud

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–∫–∞–∫ –≤ —Ç–µ–∫—É—â–µ–º –ø—Ä–æ–µ–∫—Ç–µ)
ENV NODE_ENV=production
ENV PORT=5000

# –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç
EXPOSE 5000

# –ó–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ –Ω–∞—à —Å–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
CMD ["/app/docker-start.sh"]