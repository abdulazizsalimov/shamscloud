version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: shamscloud
      POSTGRES_USER: shamscloud
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-shamscloud_secret_2024}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shamscloud -d shamscloud"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shamscloud-network

  # ShamsCloud приложение
  shamscloud:
    build: .
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://shamscloud:${POSTGRES_PASSWORD:-shamscloud_secret_2024}@postgres:5432/shamscloud
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: shamscloud
      PGPASSWORD: ${POSTGRES_PASSWORD:-shamscloud_secret_2024}
      PGDATABASE: shamscloud
      # Firebase настройки (опционально)
      VITE_FIREBASE_API_KEY: ${VITE_FIREBASE_API_KEY:-}
      VITE_FIREBASE_PROJECT_ID: ${VITE_FIREBASE_PROJECT_ID:-}
      VITE_FIREBASE_APP_ID: ${VITE_FIREBASE_APP_ID:-}
    volumes:
      - uploads_data:/app/uploads
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/auth/me"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - shamscloud-network

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local

networks:
  shamscloud-network:
    driver: bridge